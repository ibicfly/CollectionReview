单线程
红黑树,hash对查找帮助非常大
如果要求有顺序插入会变得慢TreeMap,TreeSet性能下降快
元素数量1000以后的list，查找删除性能下降非常快
hashmap,set,treeset,treemap性能较好

各集合性能和元素少的时候基本一致，仍然是LinkedList稍差。当元素上涨到10000的时候，各个集合速度将迅速下降
多线程
各集合类的性能都大幅下降，但在元素为1000左右，性能的影响性能主要取决于线程数，线程越多，性能下降越多

set,map在各种场景下表现得更出色.

总结
深入理解各集合类的控制参数，提升性能	比如通过HashMap的loadFactor

在实际使用时根据功能需求来选择list,set,map
list适合有重复的单个元素
set适合无重复的单个元素
map适合key,value键值对
ArrayList适合通过位置来读取元素的场景
LinkedList适合读取头尾元素的场景
Vector适合要线程安全的ArrayList场景
Stack适合先进后出的线程安全场景
ArrayBlockingQueue适合先进先出的队列
HashSet适合不须排序的非重复元素
TreeSet适合需要排序的非重复元素
HashMap适合大部分keyvalue键值对
TreeMap适合需要排序的keyvalue键值对


